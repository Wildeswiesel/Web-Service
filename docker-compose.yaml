
services:
  db:
    image: postgres:15
    networks: 
      - smarthome-nw
    environment:
      POSTGRES_DB: devicesdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data


  smarthome:
    build:
      context: .
      dockerfile: smarthome/Dockerfile
    image: smarthome-image
    networks: 
      - smarthome-nw
    ports:
      - '3000:3000'
    environment:
      PGHOST: db
      PGUSER: postgres
      PGPASSWORD: secret
      PGDATABASE: devicesdb
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # <-- Hier wird der Docker-Socket gemountet. Damit er Zugriff auf den Docker-Daemon des Hosts bekommt.
    depends_on:
      db:
        condition: service_healthy

  thermostat:
    container_name: web-service-thermostat-1
    build:
      context: .
      dockerfile: thermostat/Dockerfile
    image: thermostat-image
    networks: 
      - smarthome-nw
    ports:
      - "6001:6001"
    environment:
      PORT: 6001
      ROOM_ID: "Wohnzimmer"
      THERMOSTAT_ID: 1
  
  thermostat2:
    container_name: web-service-thermostat-2
    build:
      context: .
      dockerfile: thermostat/Dockerfile
    image: thermostat-image
    networks: 
      - smarthome-nw
    ports:
      - "6002:6002"
    environment:
      PORT: 6002
      ROOM_ID: "Wohnzimmer"
      THERMOSTAT_ID: 2

  thermostat3:
    container_name: web-service-thermostat-3
    build:
      context: .
      dockerfile: thermostat/Dockerfile
    image: thermostat-image
    networks: 
      - smarthome-nw
    ports:
      - "6003:6003"
    environment:
      PORT: 6003
      ROOM_ID: "KÃ¼che"
      THERMOSTAT_ID: 3

  thermostat4:
    container_name: web-service-thermostat-4
    build:
      context: .
      dockerfile: thermostat/Dockerfile
    image: thermostat-image
    networks: 
      - smarthome-nw
    ports:
      - "6004:6004"
    environment:
      PORT: 6004
      ROOM_ID: "Bad"
      THERMOSTAT_ID: 4

  fensterkontakt:
    container_name: web-service-fensterkontakt-1
    build:
      context: .
      dockerfile: fensterkontakt/Dockerfile
    image: fensterkontakt-image
    networks: 
      - smarthome-nw
    ports:
      - "3021:3021"
    environment:
      PORT: 3021
      ROOM_ID: "Wohnzimmer"
      FENSTERKONTAKT_ID: 1
  
  
volumes:
  pgdata:

networks:
  smarthome-nw:
    driver: bridge 
